import 'package:flutter/material.dart';
import 'package:mission_master/constants/colors.dart';

class ResourceAllocationScreen extends StatefulWidget {
  final String projectId;
  final String projectName;

  const ResourceAllocationScreen({
    Key? key,
    required this.projectId,
    required this.projectName,
  }) : super(key: key);

  @override
  _ResourceAllocationScreenState createState() => _ResourceAllocationScreenState();
}

class _ResourceAllocationScreenState extends State<ResourceAllocationScreen> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Ph√¢n b·ªï T√†i nguy√™n'),
        backgroundColor: AppColors.primary,
        foregroundColor: Colors.white,
      ),
      body: SingleChildScrollView(
        padding: EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            _buildHeaderCard(),
            SizedBox(height: 24),
            _buildInstructionCard(),
            SizedBox(height: 24),
            _buildExampleCard(),
            SizedBox(height: 24),
            _buildBenefitsCard(),
            SizedBox(height: 24),
            _buildImplementationCard(),
          ],
        ),
      ),
    );
  }

  Widget _buildHeaderCard() {
    return Card(
      child: Padding(
        padding: EdgeInsets.all(20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                Icon(Icons.assignment_ind, size: 32, color: AppColors.primary),
                SizedBox(width: 12),
                Expanded(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        'Ph√¢n b·ªï T√†i nguy√™n cho Tasks',
                        style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                        overflow: TextOverflow.ellipsis,
                        maxLines: 2,
                      ),
                      Text(
                        'D·ª± √°n: ${widget.projectName}',
                        style: TextStyle(color: Colors.grey[600]),
                        overflow: TextOverflow.ellipsis,
                        maxLines: 1,
                      ),
                    ],
                  ),
                ),
              ],
            ),
            SizedBox(height: 16),
            Text(
              'Ph√¢n b·ªï t√†i nguy√™n cho tasks/milestones l√† qu√° tr√¨nh g√°n c√°c t√†i nguy√™n c·ª• th·ªÉ (nh√¢n l·ª±c, thi·∫øt b·ªã, v·∫≠t li·ªáu) cho t·ª´ng nhi·ªám v·ª• trong d·ª± √°n.',
              style: TextStyle(fontSize: 16, height: 1.5),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildInstructionCard() {
    return Card(
      child: Padding(
        padding: EdgeInsets.all(20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                Icon(Icons.list_alt, color: Colors.blue),
                SizedBox(width: 8),
                Expanded(
                  child: Text(
                    'Quy tr√¨nh Ph√¢n b·ªï T√†i nguy√™n:',
                    style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold, color: Colors.blue[800]),
                    overflow: TextOverflow.ellipsis,
                    maxLines: 2,
                  ),
                ),
              ],
            ),
            SizedBox(height: 16),
            _buildStep('1', 'T·∫°o T√†i nguy√™n', 'Th√™m c√°c lo·∫°i t√†i nguy√™n c·∫ßn thi·∫øt (Developer, Designer, Laptop, etc.)', Icons.add_box),
            _buildStep('2', 'T·∫°o Tasks', 'Chia nh·ªè d·ª± √°n th√†nh c√°c tasks/milestones c·ª• th·ªÉ', Icons.task_alt),
            _buildStep('3', 'G√°n t√†i nguy√™n', 'Ch·ªçn t√†i nguy√™n ph√π h·ª£p cho t·ª´ng task', Icons.person_add),
            _buildStep('4', 'Thi·∫øt l·∫≠p th·ªùi gian', 'X√°c ƒë·ªãnh th·ªùi gian b·∫Øt ƒë·∫ßu v√† k·∫øt th√∫c s·ª≠ d·ª•ng', Icons.schedule),
            _buildStep('5', 'Theo d√µi ti·∫øn ƒë·ªô', 'Monitor t√¨nh tr·∫°ng s·ª≠ d·ª•ng v√† hi·ªáu su·∫•t', Icons.analytics),
          ],
        ),
      ),
    );
  }

  Widget _buildStep(String number, String title, String description, IconData icon) {
    return Container(
      margin: EdgeInsets.only(bottom: 16),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            width: 32,
            height: 32,
            decoration: BoxDecoration(
              color: AppColors.primary,
              shape: BoxShape.circle,
            ),
            child: Center(
              child: Text(
                number,
                style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
              ),
            ),
          ),
          SizedBox(width: 16),
          Icon(icon, color: AppColors.primary, size: 24),
          SizedBox(width: 12),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
                  overflow: TextOverflow.ellipsis,
                  maxLines: 2,
                ),
                SizedBox(height: 4),
                Text(
                  description,
                  style: TextStyle(color: Colors.grey[600], height: 1.4),
                  overflow: TextOverflow.ellipsis,
                  maxLines: 3,
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildExampleCard() {
    return Card(
      child: Padding(
        padding: EdgeInsets.all(20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                Icon(Icons.lightbulb, color: Colors.orange),
                SizedBox(width: 8),
                Expanded(
                  child: Text(
                    'V√≠ d·ª• th·ª±c t·∫ø:',
                    style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold, color: Colors.orange[800]),
                    overflow: TextOverflow.ellipsis,
                    maxLines: 1,
                  ),
                ),
              ],
            ),
            SizedBox(height: 16),
            _buildExampleItem('üì± Task: "Thi·∫øt k·∫ø giao di·ªán Login"', 'T√†i nguy√™n: 1 UI/UX Designer', 'Th·ªùi gian: 3 ng√†y', 'üí∞ Chi ph√≠: 2,250,000 VND'),
            _buildExampleItem('‚öôÔ∏è Task: "API Authentication"', 'T√†i nguy√™n: 1 Backend Developer', 'Th·ªùi gian: 5 ng√†y', 'üí∞ Chi ph√≠: 6,250,000 VND'),
            _buildExampleItem('üß™ Task: "Testing Login Feature"', 'T√†i nguy√™n: 1 Tester + 1 Thi·∫øt b·ªã test', 'Th·ªùi gian: 2 ng√†y', 'üí∞ Chi ph√≠: 1,500,000 VND'),
          ],
        ),
      ),
    );
  }

  Widget _buildExampleItem(String task, String resource, String time, String cost) {
    return Container(
      margin: EdgeInsets.only(bottom: 12),
      padding: EdgeInsets.all(12),
      decoration: BoxDecoration(
        color: Colors.grey[50],
        borderRadius: BorderRadius.circular(8),
        border: Border.all(color: Colors.grey[300]!),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            task, 
            style: TextStyle(fontWeight: FontWeight.w500),
            overflow: TextOverflow.ellipsis,
            maxLines: 2,
          ),
          SizedBox(height: 4),
          Text(
            'üîß $resource', 
            style: TextStyle(color: Colors.blue[700]),
            overflow: TextOverflow.ellipsis,
            maxLines: 2,
          ),
          Text(
            '‚è±Ô∏è $time', 
            style: TextStyle(color: Colors.green[700]),
            overflow: TextOverflow.ellipsis,
            maxLines: 1,
          ),
          Text(
            cost, 
            style: TextStyle(color: Colors.purple[700]),
            overflow: TextOverflow.ellipsis,
            maxLines: 1,
          ),
        ],
      ),
    );
  }

  Widget _buildBenefitsCard() {
    return Card(
      child: Padding(
        padding: EdgeInsets.all(20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                Icon(Icons.star, color: Colors.green),
                SizedBox(width: 8),
                Expanded(
                  child: Text(
                    'L·ª£i √≠ch c·ªßa vi·ªác Ph√¢n b·ªï T√†i nguy√™n:',
                    style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold, color: Colors.green[800]),
                    overflow: TextOverflow.ellipsis,
                    maxLines: 2,
                  ),
                ),
              ],
            ),
            SizedBox(height: 16),
            _buildBenefitItem('üìä Theo d√µi chi ph√≠ ch√≠nh x√°c', 'Bi·∫øt r√µ chi ph√≠ cho t·ª´ng task'),
            _buildBenefitItem('‚ö° T·ªëi ∆∞u h√≥a hi·ªáu su·∫•t', 'Tr√°nh l√£ng ph√≠ v√† over-allocation'),
            _buildBenefitItem('üìÖ Qu·∫£n l√Ω th·ªùi gian t·ªët h∆°n', 'L·∫≠p k·∫ø ho·∫°ch timeline chi ti·∫øt'),
            _buildBenefitItem('üîç Ph√°t hi·ªán bottleneck', 'Nh·∫≠n bi·∫øt t√†i nguy√™n thi·∫øu h·ª•t'),
            _buildBenefitItem('üìà B√°o c√°o minh b·∫°ch', 'Dashboard v√† analytics r√µ r√†ng'),
          ],
        ),
      ),
    );
  }

  Widget _buildBenefitItem(String title, String description) {
    return Container(
      margin: EdgeInsets.only(bottom: 12),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Icon(Icons.check_circle, color: Colors.green, size: 20),
          SizedBox(width: 12),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title, 
                  style: TextStyle(fontWeight: FontWeight.w500),
                  overflow: TextOverflow.ellipsis,
                  maxLines: 2,
                ),
                Text(
                  description, 
                  style: TextStyle(color: Colors.grey[600], fontSize: 13),
                  overflow: TextOverflow.ellipsis,
                  maxLines: 3,
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildImplementationCard() {
    return Card(
      child: Padding(
        padding: EdgeInsets.all(20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                Icon(Icons.construction, color: Colors.purple),
                SizedBox(width: 8),
                Expanded(
                  child: Text(
                    'T√≠nh nƒÉng ƒëang ph√°t tri·ªÉn:',
                    style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold, color: Colors.purple[800]),
                    overflow: TextOverflow.ellipsis,
                    maxLines: 2,
                  ),
                ),
              ],
            ),
            SizedBox(height: 16),
            Container(
              padding: EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: Colors.purple[50],
                borderRadius: BorderRadius.circular(8),
                border: Border.all(color: Colors.purple[200]!),
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    'üöß T√≠nh nƒÉng ph√¢n b·ªï t√†i nguy√™n chi ti·∫øt ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn',
                    style: TextStyle(fontWeight: FontWeight.w500, color: Colors.purple[800]),
                  ),
                  SizedBox(height: 8),
                  Text(
                    'Hi·ªán t·∫°i b·∫°n c√≥ th·ªÉ:',
                    style: TextStyle(color: Colors.purple[700]),
                  ),
                  SizedBox(height: 8),
                  _buildCurrentFeature('‚úÖ T·∫°o v√† qu·∫£n l√Ω t√†i nguy√™n'),
                  _buildCurrentFeature('‚úÖ Thi·∫øt l·∫≠p ng√¢n s√°ch d·ª± √°n'),
                  _buildCurrentFeature('‚úÖ Theo d√µi chi ph√≠ theo danh m·ª•c'),
                  _buildCurrentFeature('‚úÖ T·∫°o v√† ph√¢n c√¥ng tasks'),
                  SizedBox(height: 8),
                  Text(
                    'S·∫Øp ra m·∫Øt:',
                    style: TextStyle(color: Colors.purple[700]),
                  ),
                  SizedBox(height: 8),
                  _buildUpcomingFeature('üîú G√°n t√†i nguy√™n tr·ª±c ti·∫øp cho task'),
                  _buildUpcomingFeature('üîú Timeline allocation calendar'),
                  _buildUpcomingFeature('üîú Resource conflict detection'),
                  _buildUpcomingFeature('üîú Automatic cost calculation'),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  Widget _buildCurrentFeature(String feature) {
    return Padding(
      padding: EdgeInsets.only(bottom: 4),
      child: Text(
        feature,
        style: TextStyle(color: Colors.purple[600], fontSize: 14),
        overflow: TextOverflow.ellipsis,
        maxLines: 2,
      ),
    );
  }

  Widget _buildUpcomingFeature(String feature) {
    return Padding(
      padding: EdgeInsets.only(bottom: 4),
      child: Text(
        feature,
        style: TextStyle(color: Colors.purple[600], fontSize: 14),
        overflow: TextOverflow.ellipsis,
        maxLines: 2,
      ),
    );
  }
} 